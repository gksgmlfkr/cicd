<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 주찬 xml   (o)표시: 수정 완료  -->
<!--
    MEMBERNO                          NUMBER(10)     NOT NULL    PRIMARY KEY,
    ID                                VARCHAR2(30)     NOT NULL,
    PASSWD                            VARCHAR2(200)    NOT NULL,
    MNAME                             VARCHAR2(30)     NOT NULL,
    TEL                               VARCHAR2(14)     NOT NULL,
    ZIPCODE                           VARCHAR2(5)    NULL ,
    ADDRESS1                          VARCHAR2(80)     NULL ,
    ADDRESS2                          VARCHAR2(50)     NULL ,
    MDATE                             DATE     NOT NULL,
    GRADE                             NUMBER(2)    NOT NULL,
    PROFILE                           VARCHAR2(1000)     NULL ,
    POINT                             NUMBER(10)     NOT NULL, 
-->
<mapper namespace="dev.mvc.member.MemberDAOInter"> <!-- SB가 자동으로 구현하여 연동하는 interface -->

  <!-- (o) 회원 아이디 존재 유무 존재 1, 없으면 0 -->
  <select id="checkID" resultType="int" parameterType="String">
    SELECT COUNT(id) as cnt
    FROM member
    WHERE id=#{id}
  </select>
  
  <!-- (o) 회원 가입 || (참고) 시퀀스 명 디비랑 일치하는지 비교해야함 //member_seq// , 회원 이미지 : profile 설계 필요  -->
  <insert id="join" parameterType="dev.mvc.member.MemberVO">
    INSERT INTO member(memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate)
    VALUES (member_seq.nextval, #{id}, #{passwd}, #{mname}, #{tel}, #{zipcode}, 
                 #{address1}, #{address2}, sysdate)
  </insert>

  <!-- (o) 관리자 회원 전체조회 || profile (X) -->
  <select id="userlist" resultType="dev.mvc.member.MemberVO">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade, point
    FROM member
    ORDER BY grade ASC, id ASC
  </select>
  
  
  <!-- memberno로 회원 정보 조회?? -->
  <select id="read" resultType="dev.mvc.member.MemberVO" parameterType="int">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade
    FROM member
    WHERE memberno = #{memberno}
  </select>  

  <!-- (o) id로 회원 정보 조회 -->
  <select id="readById" resultType="dev.mvc.member.MemberVO" parameterType="String">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade, profile, point
    FROM member
    WHERE id = #{id}
  </select>
  
  <!-- (o) 회원 정보 수정 -->
  <update id="update" parameterType="dev.mvc.member.MemberVO">
    UPDATE member 
    SET mname=#{mname}, tel=#{tel}, zipcode=#{zipcode}, address1=#{address1}, address2=#{address2}, profile=#{profile}
    WHERE memberno=#{memberno}
  </update>
  
  
  <!-- (o) 회원 탈퇴 || 탈퇴 성공 : 1, 실패 : 0 -->
  <delete id="delete" parameterType="int">
    DELETE FROM member
    WHERE memberno=#{memberno}
  </delete>

  <!-- (o)로그인 || 로그인성공시 : 1, 실패 : 0-->
  <select id="login" resultType="int" parameterType="HashMap">
    SELECT COUNT(memberno) as cnt
    FROM member
    WHERE id=#{id} AND passwd=#{passwd}
  </select>
  
  <!--  (o) 현재 패스워드 검사 -->
  <select id="passwd_check" parameterType="HashMap" resultType="int">
    SELECT COUNT(memberno) as cnt
    FROM member
    WHERE memberno=#{memberno} AND passwd=#{passwd}
  </select>
   
  <!-- (o) 패스워드 변경 -->
  <update id="passwd_update" parameterType="HashMap">
    UPDATE member
    SET passwd=#{passwd}
    WHERE memberno=#{memberno}
  </update>
  
</mapper>

